plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'org.sonarqube' version '3.3'
}

group = 'com.bol'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // Use redisson for distributed lock
    implementation 'org.redisson:redisson-spring-boot-starter:3.17.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    // Using groovy spock test for its nice multiple parameter features(much better than junit CSV model)
    testImplementation 'org.spockframework:spock-spring:2.1-groovy-3.0'
    testImplementation 'org.spockframework:spock-core:2.1-groovy-3.0'
    implementation 'org.codehaus.groovy:groovy-all:3.0.10'
}

tasks.named('test') {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "being0_bol_kalah"
        property "sonar.organization", "being0"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.groovy.binaries", "${project.buildDir.name}${File.separator}classes${File.separator}groovy${File.separator}test"
    }
}